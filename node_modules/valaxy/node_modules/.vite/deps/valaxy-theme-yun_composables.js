import {
  valaxy_exports
} from "./chunk-YG7ZNH6L.js";
import {
  computed,
  ref,
  watch
} from "./chunk-E6PN4FVI.js";
import {
  __reExport
} from "./chunk-TH2OHAGX.js";

// node_modules/valaxy-theme-yun/composables/config.ts
function useThemeConfig() {
  const config = (0, valaxy_exports.useConfig)();
  return computed(() => config.value.themeConfig);
}

// external:@vueuse/core
var core_exports = {};
__reExport(core_exports, core_star);
import * as core_star from "@vueuse/core";

// node_modules/valaxy-theme-yun/composables/helper.ts
function useRandomData(source, random = false) {
  const data = ref();
  watch(() => source, async () => {
    let rawData;
    if (typeof source === "string") {
      if (!core_exports.isClient)
        return;
      rawData = await fetch(source).then((res) => res.json());
    } else {
      rawData = source;
    }
    data.value = random ? Array.from(rawData).sort(() => Math.random() - 0.5) : rawData;
  }, { immediate: true });
  return {
    data
  };
}

// node_modules/valaxy-theme-yun/composables/post.ts
function usePostProperty(type) {
  if (!type) {
    return {
      color: "",
      icon: "",
      styles: void 0
    };
  }
  const themeConfig = useThemeConfig();
  if (!(type in themeConfig.value.types))
    type = "link";
  const color = themeConfig.value.types[type].color;
  const icon = themeConfig.value.types[type].icon;
  const styles = computed(() => {
    return type ? {
      "--card-c-primary": color
    } : void 0;
  });
  return {
    color,
    icon,
    styles
  };
}
export {
  usePostProperty,
  useRandomData,
  useThemeConfig
};
//# sourceMappingURL=valaxy-theme-yun_composables.js.map
